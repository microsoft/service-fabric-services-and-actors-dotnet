<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2011 (x64) (http://www.altova.com) by MICROSOFT CORPORATION (MICROSOFT CORPORATION) -->
<!-- WARNING: Any Updates to the model must update both native and managed ServiceModel in the code. -->
<xs:schema xmlns="http://schemas.microsoft.com/2011/01/fabric" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://schemas.microsoft.com/2011/01/fabric" elementFormDefault="qualified" attributeFormDefault="unqualified">
  <xs:annotation>
    <xs:documentation>Microsoft Azure Service Fabric StartupServices Model. Version: V1_RTM_3 [MajorVersion_Milestone_ChangeNo]</xs:documentation>
  </xs:annotation>
  <xs:element name="StartupServicesManifest" type="StartupServicesManifestType"/>

  <!-- ****** Types used by StartupService Manifest *****-->
  <xs:complexType name="StartupServicesManifestType">
    <xs:annotation>
      <xs:documentation>Manifest used to define StartupServices.xml. This consists of Services and Parameters</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Parameters" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Declares the parameters that are used in this startupService manifest. The value of these parameters can be supplied when the SF service/services are instantiated and can be used to override service configuration settings.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Parameter" block="" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>A service parameter to be used in this manifest. The parameter value can be changed during service instantiation, or, if no value is supplied the default value is used.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="Name" use="required">
                  <xs:annotation>
                    <xs:documentation>The name of the parameter to be used in the manifest as "[Name]".</xs:documentation>
                  </xs:annotation>
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:minLength value="1"/>
                    </xs:restriction>
                  </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="DefaultValue" type="xs:string" use="required">
                  <xs:annotation>
                    <xs:documentation>Default value for the parameter, used if the parameter value is not provided during service instantiation.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Services" type="StartupDefaultServicesType" minOccurs="0">
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="StartupDefaultServicesType">
    <xs:annotation>
      <xs:documentation>Declares service instances that are created whenever an application is instantiated with StartupServices.xml.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Service">
          <xs:annotation>
            <xs:documentation>Declares a service to be created when the application is instantiated with StartupServices.xml.</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs="0">
              <xs:element name="StatelessService" type="StartupStatelessServiceType"/>
              <xs:element name="StatefulService" type="StartupStatefulServiceType"/>
            </xs:choice>
            <xs:attribute name="Name" type="xs:string" use="required">
              <xs:annotation>
                <xs:documentation>The service name, used to form the fully qualified application name URI. The fully qualified name URI of the service would be: fabric:/ApplicationName/ServiceName.</xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="GeneratedIdRef" type="xs:string" use="optional">
              <xs:annotation>
                <xs:documentation>Reference to the auto generated id used by Visual Studio tooling.</xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ServiceDnsName" type="xs:string" use="optional">
              <xs:annotation>
                <xs:documentation>The DNS name of the service.</xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ServicePackageActivationMode" type="xs:string" use="optional" default="SharedProcess">
              <xs:annotation>
                <xs:documentation>ServicePackageActivationMode to be used when creating the service. Allowed values are 'SharedProcess' and 'ExclusiveProcess'. With SharedProcess mode, replica(s) or instance(s) from different partition(s) of service will share same same activation of service package on a node. With ExclusiveProcess mode, each replica or instance of service will have its own dedicated activation of service package.</xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="ServiceGroup">
          <xs:annotation>
            <xs:documentation>A collection of services that are automatically located together, so they are also moved together during fail-over or resource management.</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs="0">
              <xs:element name="StatelessServiceGroup" type="StartupStatelessServiceGroupType"/>
              <xs:element name="StatefulServiceGroup" type="StartupStatefulServiceGroupType"/>
            </xs:choice>
            <xs:attribute name="Name" type="xs:string" use="required">
              <xs:annotation>
                <xs:documentation>Name of this service relative to this application Name URI. Fully qualified Name of the service is a combination of Name Uri of the Application and this Name.</xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ServicePackageActivationMode" type="xs:string" use="optional" default="SharedProcess">
              <xs:annotation>
                <xs:documentation>ServicePackageActivationMode to be used when creating the service. Allowed values are 'SharedProcess' and 'ExclusiveProcess'. With SharedProcess mode, replica(s) or instance(s) from different partition(s) of service will share same same activation of service package on a node. With ExclusiveProcess mode, each replica or instance of service will have its own dedicated activation of service package.</xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="StartupServiceType">
    <xs:annotation>
      <xs:documentation>Base type that defines a Microsoft Azure Service Fabric service.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="StartupPartitionDescriptionGroup"/>
      <xs:element name="LoadMetrics" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Load metrics reported by this service, used for resource balancing services.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LoadMetric" type="StartupLoadMetricType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PlacementConstraints" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Used to control which nodes in the cluster a service can run on. A key/value pair which describes the node property name and the service's requirements for the value. Individual statements can be grouped together with simple boolean logic to create the necessary constraint. For example, "(FirmwareVersion&gt;12  &amp;&amp; InDMZ == True)".</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ServiceCorrelations" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Defines affinity relationships between services.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ServiceCorrelation" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Defines an affinity relationship with another service. Useful when splitting a previously-monolithic application into microservices.  One service has a local dependency on another service and both services need to run on the same node in order to work.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="ServiceName" use="required">
                  <xs:annotation>
                    <xs:documentation>The name of the other service as a URI. Example, "fabric:/otherApplication/parentService".</xs:documentation>
                  </xs:annotation>
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:minLength value="1"/>
                    </xs:restriction>
                  </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="Scheme" use="required">
                  <xs:annotation>
                    <xs:documentation>In NonAlignedAffinity the replicas or instances of the different services are placed on the same nodes. AlignedAffinity is used with stateful services. Configuring one stateful service as having aligned affinity with another stateful service ensures that the primaries of those services are placed on the same nodes as each other, and that each pair of secondaries are also placed on the same nodes.</xs:documentation>
                  </xs:annotation>
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:enumeration value="Affinity"/>
                      <xs:enumeration value="AlignedAffinity"/>
                      <xs:enumeration value="NonAlignedAffinity"/>
                    </xs:restriction>
                  </xs:simpleType>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServicePlacementPolicies" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Declares placement policies for a service.  Useful when the cluster spans geographic distances or and/or geopolitical regions.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ServicePlacementPolicy" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>Defines a service placement policy, which specifies that the service should or should not run in certain cluster fault domains.  Useful when the cluster spans geographic distances or and/or geopolitical regions.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="DomainName">
                  <xs:annotation>
                    <xs:documentation>The fault domain where the service should or should not be placed, depending on the Type value.</xs:documentation>
                  </xs:annotation>
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:minLength value="1"/>
                    </xs:restriction>
                  </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="Type" use="required">
                  <xs:annotation>
                    <xs:documentation>InvalidDomain allows you to specify that a particular Fault Domain is invalid for this workload. RequiredDomain requires that all of the replicas be present in the specified domain. Multiple required domains can be specified. PreferredPrimaryDomain specifies the preferred Fault Domain for primary replicas. Useful in geographically spanned clusters where you are using other locations for redundancy, but would prefer that the primary replicas be placed in a certain location in order to provider lower latency for operations which go to the primary. RequiredDomainDistribution specifies that replicas are required to be distributed among the available fault domains. NonPartiallyPlace controls if the service replicas will be partially place if not all of them can be placed.</xs:documentation>
                  </xs:annotation>
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:enumeration value="InvalidDomain"/>
                      <xs:enumeration value="RequiredDomain"/>
                      <xs:enumeration value="PreferredPrimaryDomain"/>
                      <xs:enumeration value="RequiredDomainDistribution"/>
                      <xs:enumeration value="NonPartiallyPlace"/>
                    </xs:restriction>
                  </xs:simpleType>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServiceScalingPolicies" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Declares scaling policies for a service. Useful for dynamically scaling the service based on needs. </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ScalingPolicy" type="StartupScalingPolicyType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="ServiceTypeName" use="required">
      <xs:annotation>
        <xs:documentation>Name of the service type, declared in the service manifest, that will be instantiated.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="DefaultMoveCost">
      <xs:annotation>
        <xs:documentation>Specifies default move cost for this service.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Zero"/>
          <xs:enumeration value="Low"/>
          <xs:enumeration value="Medium"/>
          <xs:enumeration value="High"/>
          <xs:enumeration value="VeryHigh"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="StartupStatelessServiceType">
    <xs:annotation>
      <xs:documentation>Defines a stateless service.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="StartupServiceType">
        <xs:attribute name="InstanceCount" type="xs:string" default="1">
          <xs:annotation>
            <xs:documentation>Number of instances required for this stateless service (positive integer).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="InstanceCloseDelayDurationSeconds" type="xs:string" use="optional" default="">
          <xs:annotation>
            <xs:documentation>
              The duration for which the graceful close of a stateless instance is delayed. This would be effective when the instance is closing during the application/cluster upgrade and disabling node. The endpoint exposed on this instance is removed prior to starting the delay, which prevents new connections to this instance. In addition, clients that have subscribed to <see href="https://docs.microsoft.com/en-us/dotnet/api/system.fabric.fabricclient.servicemanagementclient.registerservicenotificationfilterasync"> service endpoint change events</see> can do the following upon receiving the endpoint removal notification: - Stop sending new requests to this instance. - Close existing connections after in-flight requests have completed. - Connect to a different instance of the service partition for future requests. Note, the default value is TimeSpan.Zero, which indicates that there won't be any delay or removal of the endpoint prior to closing the instance.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="MinInstanceCount" type="xs:string" default="1">
          <xs:annotation>
            <xs:documentation>
              Has the ability to indicate the minimum number of instances that have to be up during Ensure Availability safety check.
              The actual number that is used is max(MinInstanceCount), ceil(MinInstancePercentage * InstanceCount")).
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="MinInstancePercentage" type="xs:string" default="0">
          <xs:annotation>
            <xs:documentation>
              Has the ability to indicate the minimum number of instances that have to be up during Ensure Availability safety check.
              The actual number that is used is max(MinInstanceCount), ceil(MinInstancePercentage * InstanceCount")).
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="InstanceRestartWaitDurationSeconds" type="xs:string" use="optional" default="">
          <xs:annotation>
            <xs:documentation>The duration for which the Service Fabric will wait for stateless instance to come up. If the instance does not come up within this specified time duration, Service Fabric will start creating the replacement. The default value is TimeSpan.Zero, which indicates that when stateless instance goes down, Service Fabric will immediately start building its replacement.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>


  <xs:complexType name="StartupStatefulServiceType">
    <xs:annotation>
      <xs:documentation>Defines a stateful service.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="StartupServiceType">
        <xs:attribute name="TargetReplicaSetSize" type="xs:string" default="1">
          <xs:annotation>
            <xs:documentation>Desired replica set size for the partitions of this stateful service. Must be a positive integer. This is a target size; a replica set is still functional with less members. The quorum is a majority based quorum.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="MinReplicaSetSize" type="xs:string" default="1">
          <xs:annotation>
            <xs:documentation>Minimum number of replicas required in the replica set to allow writes.  Must be positive integer less than TargetReplicaSetSize. </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ReplicaRestartWaitDurationSeconds" type="xs:string" use="optional" default="">
          <xs:annotation>
            <xs:documentation>The duration between when a replica goes down and when a new replica is created. When a persistent replica goes down, this timer starts.  When it expires Service Fabric will create a new replica on any node in the cluster.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="QuorumLossWaitDurationSeconds" type="xs:string" use="optional" default="">
          <xs:annotation>
            <xs:documentation>The maximum duration for which a partition is allowed to be in a state of quorum loss. If the partition is still in quorum loss after this duration, the partition is recovered from quorum loss by considering the down replicas as lost. Note that this can potentially incur data loss.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="StandByReplicaKeepDurationSeconds" type="xs:string" use="optional" default="">
          <xs:annotation>
            <xs:documentation>How long StandBy replicas should be maintained before being removed. Sometimes a replica will be down for longer than the ReplicaRestartWaitDuration. In these cases a new replica will be built to replace it. Sometimes however the loss is not permanent and the persistent replica is eventually recovered. This now constitutes a StandBy replica.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ServicePlacementTimeLimitSeconds" type="xs:string" use="optional" default="">
          <xs:annotation>
            <xs:documentation>ServicePlacementTimeLimitSeconds is the time for which partitions of the service can remain in the InBuild state before an error health report is generated to indicate that the build is stuck. If not specified, the default value is taken from the PlacementTimeLimit parameter in cluster settings for FailoverManager. https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-fabric-settings#failovermanager" check PlacementTimeLimit config. This setting is useful when the PlacementTimeLimit parameter in cluster settings for FailoverManager is not appropriate for all services. In such cases, ServicePlacementTimeLimit can be used to specify the expected InBuild duration on a per-service basis.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="DropSourceReplicaOnMove" type="xs:string" use="optional" default="">
          <xs:annotation>
            <xs:documentation>DropSourceReplicaOnMove specifies whether to drop source replica before new replica finishes building. </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="StartupServiceGroupMemberType">
    <xs:sequence>
      <xs:element name="LoadMetrics" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Load metrics reported by this service.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LoadMetric" type="StartupLoadMetricType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="ServiceTypeName" use="required">
      <xs:annotation>
        <xs:documentation>Type of the service group member.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Name" use="required">
      <xs:annotation>
        <xs:documentation>Name of the service group member relative to the name of the service group.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="StartupStatelessServiceGroupType">
    <xs:annotation>
      <xs:documentation>Defines a stateless service group.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="StartupStatelessServiceType">
        <xs:sequence>
          <xs:element name="Members" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>Member services of this service group</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Member" type="StartupServiceGroupMemberType" minOccurs="1" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="StartupStatefulServiceGroupType">
    <xs:annotation>
      <xs:documentation>Defines a stateful service group.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="StartupStatefulServiceType">
        <xs:sequence>
          <xs:element name="Members" minOccurs="1" maxOccurs="1">
            <xs:annotation>
              <xs:documentation>Member services of this service group</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Member" type="StartupServiceGroupMemberType" minOccurs="1" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="StartupPartitionDescriptionGroup">
    <xs:annotation>
      <xs:documentation>Defines the partitioning scheme for a service.</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="SingletonPartition">
        <xs:annotation>
          <xs:documentation>Declares that this service has only one partition.</xs:documentation>
        </xs:annotation>
        <xs:complexType/>
      </xs:element>
      <xs:element name="UniformInt64Partition">
        <xs:annotation>
          <xs:documentation>Describes a uniform partitioning scheme based on Int64 keys.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="PartitionCount" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>Total number of partitions (positive integer). Each partition is responsible for a non-overlapping subrange of the overall partition key range.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="LowKey" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>Inclusive low range of the partition key (long).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="HighKey" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>Inclusive high range of the partition key (long).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="NamedPartition">
        <xs:annotation>
          <xs:documentation>Describes a named partitioning scheme based on names for each partition.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence maxOccurs="unbounded">
            <xs:element name="Partition">
              <xs:annotation>
                <xs:documentation>Describes a partition by name.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="Name" use="required">
                  <xs:annotation>
                    <xs:documentation>The name of the partition</xs:documentation>
                  </xs:annotation>
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:minLength value="1"/>
                    </xs:restriction>
                  </xs:simpleType>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:complexType name="StartupLoadMetricType">
    <xs:annotation>
      <xs:documentation>A resource that this service should be balanced on, such as memory or CPU usage.  Includes information about how much of that resource each replica or instance of this service consumes by default.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" use="required">
      <xs:annotation>
        <xs:documentation>A unique identifier for the metric within the cluster from the Cluster Resource Manager's perspective.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="DefaultLoad" type="xs:long" use="optional" default="0">
      <xs:annotation>
        <xs:documentation>The default amount of load that this stateless service creates for this metric.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="PrimaryDefaultLoad" type="xs:long" use="optional" default="0">
      <xs:annotation>
        <xs:documentation>The default amount of load that this service will exert for this metric when it's a primary replica.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SecondaryDefaultLoad" type="xs:long" use="optional" default="0">
      <xs:annotation>
        <xs:documentation>The default amount of load that this service will exert for this metric when it's a secondary replica.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Weight">
      <xs:annotation>
        <xs:documentation>Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight. Zero disables load balancing for this metric.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Zero"/>
          <xs:enumeration value="Low"/>
          <xs:enumeration value="Medium"/>
          <xs:enumeration value="High"/>
          <xs:enumeration value="VeryHigh"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="StartupScalingPolicyType">
    <xs:annotation>
      <xs:documentation>A scaling policy description consisting of a trigger and a mechanism for scaling. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="StartupScalingPolicyTriggerGroup"/>
      <xs:group ref="StartupScalingPolicyMechanismGroup"/>
    </xs:sequence>
  </xs:complexType>
  <xs:group name="StartupScalingPolicyMechanismGroup">
    <xs:annotation>
      <xs:documentation>Defines the scaling mechanism.</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="InstanceCountScalingMechanism" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Defines a mechanism for increasing the instance count of a partition. This is for stateless services only.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="MinInstanceCount" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The minimum number of instances.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MaxInstanceCount" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The maximum number of instances..</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ScaleIncrement" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The number of instances by which to perform the upshift/downshift.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="AddRemoveIncrementalNamedPartitionScalingMechanism" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Defines a mechanism for adding or removing named partitions.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="MinPartitionCount" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The minimum number of partitions.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="MaxPartitionCount" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The maximum number of partitions.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ScaleIncrement" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The number of partitions by which to perform the upshift/downshift.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
  <xs:group name="StartupScalingPolicyTriggerGroup">
    <xs:annotation>
      <xs:documentation>Defines the scaling trigger.</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="AveragePartitionLoadScalingTrigger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Defines a scaling mechanism based on the average load of replicas of a partition.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="MetricName" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The name of metric which should be used for scaling operations.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="LowerLoadThreshold" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The lower limit of the load value of a metric.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="UpperLoadThreshold" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The upper limit of the load value of a metric.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ScaleIntervalInSeconds" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The time interval in seconds to be considered for scaling.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="AverageServiceLoadScalingTrigger" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Defines a scaling mechanism based on the average load of partitions of a service.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="MetricName" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The name of metric which should be used for scaling operations.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="LowerLoadThreshold" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The lower limit of the load value of a metric.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="UpperLoadThreshold" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The upper limit of the load value of a metric.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ScaleIntervalInSeconds" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The time interval in seconds to be considered for scaling.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="UseOnlyPrimaryLoad" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Use load of primary replica as average load of partition.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>

</xs:schema>